"use strict";(self.webpackChunkqava_docs=self.webpackChunkqava_docs||[]).push([[672],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),o=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=o(a),d=n,g=m["".concat(p,".").concat(d)]||m[d]||u[d]||l;return a?r.createElement(g,s(s({ref:t},c),{},{components:a})):r.createElement(g,s({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,s=new Array(l);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var o=2;o<l;o++)s[o]=a[o];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8621:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var r=a(7462),n=(a(7294),a(4137));const l={sidebar_position:10},s="@qavajs/steps-visual-testing",i={unversionedId:"Steps/visual-testing",id:"Steps/visual-testing",title:"@qavajs/steps-visual-testing",description:"Step library to perform visual testing using pixelmatch library",source:"@site/docs/Steps/visual-testing.md",sourceDirName:"Steps",slug:"/Steps/visual-testing",permalink:"/docs/Steps/visual-testing",draft:!1,editUrl:"https://github.com/qavajs/qavajs.github.io/tree/main/docs/Steps/visual-testing.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"@qavajs/steps-gmail",permalink:"/docs/Steps/gmail"},next:{title:"Modules",permalink:"/docs/category/modules"}},p={},o=[{value:"Installation",id:"installation",level:2},{value:"Config",id:"config",level:2},{value:"Steps",id:"steps",level:2},{value:"I expect {string} screenshot to equal {string}",id:"i-expect-string-screenshot-to-equal-string",level:3},{value:"I expect {string} screenshot to equal {string}: DataTable",id:"i-expect-string-screenshot-to-equal-string-datatable",level:3}],c={toc:o};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"qavajssteps-visual-testing"},"@qavajs/steps-visual-testing"),(0,n.kt)("p",null,"Step library to perform visual testing using pixelmatch library"),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"npm install @qavajs/steps-visual-testing")),(0,n.kt)("h2",{id:"config"},"Config"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n    default: {\n        require: [\n            '@qavajs/steps-visual-testing/index.js'\n        ],\n    }\n}\n")),(0,n.kt)("h2",{id:"steps"},"Steps"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"i-expect-string-screenshot-to-equal-string"},"I expect {string} screenshot to equal {string}"),(0,n.kt)("p",null,"Compare two screenshots from memory (saved as base64)"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"param"),(0,n.kt)("th",{parentName:"tr",align:"center"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"actual"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"alias of actual screenshot")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"expected"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"alias of expected screenshot")))),(0,n.kt)("p",null,"example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"Then I expect '$actual' screenshot to equal '$expected'\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"i-expect-string-screenshot-to-equal-string-datatable"},"I expect {string} screenshot to equal {string}: ","[DataTable]"),(0,n.kt)("p",null,"Compare two screenshots from memory (saved as base64) with provided compare parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"param"),(0,n.kt)("th",{parentName:"tr",align:"center"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"actual"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"alias of actual screenshot")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"expected"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"alias of expected screenshot")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"params"),(0,n.kt)("td",{parentName:"tr",align:"center"},"DataTable"),(0,n.kt)("td",{parentName:"tr",align:"center"},"table of key-value params")))),(0,n.kt)("p",null,"Supported params:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"param"),(0,n.kt)("th",{parentName:"tr",align:"center"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"threshold"),(0,n.kt)("td",{parentName:"tr",align:"center"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Matching threshold, ranges from 0 to 1. Smaller values make the comparison more sensitive")))),(0,n.kt)("p",null,"example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"Then I expect '$actual' screenshot to equal '$expected':\n  | threshold | 0.5 |\n")),(0,n.kt)("hr",null))}u.isMDXComponent=!0}}]);