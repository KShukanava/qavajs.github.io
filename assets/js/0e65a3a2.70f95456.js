"use strict";(self.webpackChunkqava_docs=self.webpackChunkqava_docs||[]).push([[702],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),m=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=m(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=m(a),k=n,g=d["".concat(o,".").concat(k)]||d[k]||c[k]||i;return a?r.createElement(g,l(l({ref:t},s),{},{components:a})):r.createElement(g,l({ref:t},s))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var m=2;m<i;m++)l[m]=a[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7422:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var r=a(7462),n=(a(7294),a(3905));const i={sidebar_position:4},l="@qavajs/steps-memory",p={unversionedId:"Steps/memory",id:"Steps/memory",title:"@qavajs/steps-memory",description:"Steps to work with memory module",source:"@site/docs/Steps/memory.md",sourceDirName:"Steps",slug:"/Steps/memory",permalink:"/docs/Steps/memory",draft:!1,editUrl:"https://github.com/qavajs/qavajs.github.io/tree/main/docs/Steps/memory.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"@qavajs/steps-api",permalink:"/docs/Steps/api"},next:{title:"@qavajs/steps-files",permalink:"/docs/Steps/files"}},o={},m=[{value:"Installation",id:"installation",level:2},{value:"Config",id:"config",level:2},{value:"Steps",id:"steps",level:2},{value:"I expect {string} {memoryValidation} {string}",id:"i-expect-string-memoryvalidation-string",level:3},{value:"I expect every element in {string} array {memoryValidation} {string}",id:"i-expect-every-element-in-string-array-memoryvalidation-string",level:3},{value:"I expect at least {int} elements in {string} array {memoryValidation} {string}",id:"i-expect-at-least-int-elements-in-string-array-memoryvalidation-string",level:3},{value:"I save {string} to memory as {string}",id:"i-save-string-to-memory-as-string",level:3},{value:"I save result of math expression {string} as {string}",id:"i-save-result-of-math-expression-string-as-string",level:3}],s={toc:m};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"qavajssteps-memory"},"@qavajs/steps-memory"),(0,n.kt)("p",null,"Steps to work with memory module"),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"npm install @qavajs/steps-memory")),(0,n.kt)("h2",{id:"config"},"Config"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n    default: {\n        require: [\n            'node_modules/@qavajs/steps-memory'\n        ]\n    }\n}\n")),(0,n.kt)("h2",{id:"steps"},"Steps"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"i-expect-string-memoryvalidation-string"},"I expect {string} {memoryValidation} {string}"),(0,n.kt)("p",null,"Verify that value from memory satisfies validation against other value"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"param"),(0,n.kt)("th",{parentName:"tr",align:"center"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"description"),(0,n.kt)("th",{parentName:"tr",align:"center"},"example"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"value1"),(0,n.kt)("td",{parentName:"tr",align:"center"},"any"),(0,n.kt)("td",{parentName:"tr",align:"center"},"value1"),(0,n.kt)("td",{parentName:"tr",align:"center"},"42, $value, $currentDate()")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"validation"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Function"),(0,n.kt)("td",{parentName:"tr",align:"center"},"function to verify condition"),(0,n.kt)("td",{parentName:"tr",align:"center"},"to be equal, to be above, to be below")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"value2"),(0,n.kt)("td",{parentName:"tr",align:"center"},"any"),(0,n.kt)("td",{parentName:"tr",align:"center"},"value2"),(0,n.kt)("td",{parentName:"tr",align:"center"},"42, $value, $currentDate()")))),(0,n.kt)("p",null,"example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"Then I expect '$value' equals to '$anotherValue'\nThen I expect '$value' does not contain '56'\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"i-expect-every-element-in-string-array-memoryvalidation-string"},"I expect every element in {string} array {memoryValidation} {string}"),(0,n.kt)("p",null,"Verify that every element in array satisfies validation against other value"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"param"),(0,n.kt)("th",{parentName:"tr",align:"center"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"description"),(0,n.kt)("th",{parentName:"tr",align:"center"},"example"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"arr"),(0,n.kt)("td",{parentName:"tr",align:"center"},"any"),(0,n.kt)("td",{parentName:"tr",align:"center"},"array to validate"),(0,n.kt)("td",{parentName:"tr",align:"center"},"$value, $currentDate()")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"validation"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Function"),(0,n.kt)("td",{parentName:"tr",align:"center"},"function to verify condition"),(0,n.kt)("td",{parentName:"tr",align:"center"},"to be equal, to be above, to be below")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"expectedValue"),(0,n.kt)("td",{parentName:"tr",align:"center"},"any"),(0,n.kt)("td",{parentName:"tr",align:"center"},"expected value"),(0,n.kt)("td",{parentName:"tr",align:"center"},"42, $value, $currentDate()")))),(0,n.kt)("p",null,"example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"Then I expect every element in '$arr' array to be above '$expectedValue'\nThen I expect every element in '$arr' array to be above '50'\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"i-expect-at-least-int-elements-in-string-array-memoryvalidation-string"},"I expect at least {int} elements in {string} array {memoryValidation} {string}"),(0,n.kt)("p",null,"Verify that at least x elements in array pass validation"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"param"),(0,n.kt)("th",{parentName:"tr",align:"center"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"description"),(0,n.kt)("th",{parentName:"tr",align:"center"},"example"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"expectedNumber"),(0,n.kt)("td",{parentName:"tr",align:"center"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"expected number of elements that satisfy validation"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1,2,3")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"arr"),(0,n.kt)("td",{parentName:"tr",align:"center"},"any"),(0,n.kt)("td",{parentName:"tr",align:"center"},"array to validate"),(0,n.kt)("td",{parentName:"tr",align:"center"},"$value, $currentDate()")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"validation"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Function"),(0,n.kt)("td",{parentName:"tr",align:"center"},"function to verify condition"),(0,n.kt)("td",{parentName:"tr",align:"center"},"to be equal, to be above, to be below")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"expectedValue"),(0,n.kt)("td",{parentName:"tr",align:"center"},"any"),(0,n.kt)("td",{parentName:"tr",align:"center"},"expected value"),(0,n.kt)("td",{parentName:"tr",align:"center"},"42, $value, $currentDate()")))),(0,n.kt)("p",null,"example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"Then I expect at least 1 element(s) in '$arr' array to be above '$expectedValue'\nThen I expect at least 2 element(s) in '$arr' array to be above '50'\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"i-save-string-to-memory-as-string"},"I save {string} to memory as {string}"),(0,n.kt)("p",null,"Set memory value"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"param"),(0,n.kt)("th",{parentName:"tr",align:"center"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"description"),(0,n.kt)("th",{parentName:"tr",align:"center"},"example"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"value"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"value"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"key"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"key"),(0,n.kt)("td",{parentName:"tr",align:"center"})))),(0,n.kt)("p",null,"example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"When I save 'value' to memory as 'key'\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"i-save-result-of-math-expression-string-as-string"},"I save result of math expression {string} as {string}"),(0,n.kt)("p",null,"Save result of math expression and save result to memory"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"param"),(0,n.kt)("th",{parentName:"tr",align:"center"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"description"),(0,n.kt)("th",{parentName:"tr",align:"center"},"example"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"expression"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"expression to evaluate"),(0,n.kt)("td",{parentName:"tr",align:"center"},"{$var} + 1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"key"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"key"),(0,n.kt)("td",{parentName:"tr",align:"center"})))),(0,n.kt)("p",null,"example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"When I save result of math expression '{$variable} + 42' as 'result'\nWhen I save result of math expression '{$random()} * 100' as 'result'\n")))}c.isMDXComponent=!0}}]);